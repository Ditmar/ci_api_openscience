name: Deploy to aws EC2
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      API_REST:
        description: "VERSION"
        required: true
        default: ""
      ENV:
        description: "ENVIRONMENT"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prod
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v2

      - name: Test SSH conection
        if: github.event_name == 'workflow_dispatch'
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: echo "SSH connection successful"
      - name: Loging into Docker Hub
        if: github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set environment variables
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "ENV=${{ github.event.inputs.ENV }}" >> $GITHUB_ENV
          echo "API_REST=${{ github.event.inputs.API_REST }}" >> $GITHUB_ENV
          if [ "${{ github.event.inputs.ENV }}" == "prod" ]; then
            echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}" >> $GITHUB_ENV
            echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}" >> $GITHUB_ENV
          else
            echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}" >> $GITHUB_ENV
            echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}" >> $GITHUB_ENV
          fi
      - name: setup image versions
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "API_REST_VERSION=${{ env.API_REST }}"
          echo "MONGO_INITDB_ROOT_PASSWORD=${{ env.MONGO_INITDB_ROOT_PASSWORD }}"
          echo "MONGO_INITDB_ROOT_USERNAME=${{ env.MONGO_INITDB_ROOT_USERNAME }}"
      - name: Copy Docker componse file to EC2
        if: github.event_name == 'workflow_dispatch'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "deploy/${{ env.ENV }}/deploy.yml"
          target: "/home/${{ secrets.EC2_USER }}/deploy"
      - name: Deploy to EC2
        if: github.event_name == 'workflow_dispatch'
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.EC2_USER }}/deploy/deploy/${{ env.ENV }}
            export API_REST_VERSION=${{ env.API_REST }}
            export MONGO_INITDB_ROOT_USERNAME=${{ env.MONGO_INITDB_ROOT_USERNAME }}
            export MONGO_INITDB_ROOT_PASSWORD=${{ env.MONGO_INITDB_ROOT_PASSWORD }}
            echo "API_REST_VERSION=${{ env.API_REST }}"
            docker-compose -f deploy.yml down
            docker-compose -f deploy.yml up -d
            docker system prune -f